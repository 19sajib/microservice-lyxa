version: '3.8'

services:
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=mongodb://mongodb:27017/auth-service
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - JWT_ACCESS_SECRET=production-access-secret-change-me
      - JWT_REFRESH_SECRET=production-refresh-secret-change-me
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - auth-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  mongodb:
    image: mongo:7.0-jammy
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=auth-service
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - auth-network
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - auth-network
    restart: unless-stopped
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

networks:
  auth-network:
    driver: bridge

volumes:
  mongodb_data:
  rabbitmq_data: